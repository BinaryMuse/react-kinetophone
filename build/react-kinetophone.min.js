!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("react")):"function"==typeof define&&define.amd?define(["react"],t):"object"==typeof exports?exports.ReactKinetophone=t(require("react")):e.ReactKinetophone=t(e.React)}(this,function(e){return function(e){function t(i){if(n[i])return n[i].exports;var o=n[i]={exports:{},id:i,loaded:!1};return e[i].call(o.exports,o,o.exports,t),o.loaded=!0,o.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t,n){e.exports={ControlBar:n(9),PlayPauseButton:n(6),SeekBar:n(7),TimeDisplay:n(12),ImageOutput:n(10),AudioOutput:n(8),AudioClip:n(5),TextOutput:n(11),ChannelMixin:n(3),EventMixin:n(2)}},function(t){t.exports=e},function(e){e.exports={componentDidMount:function(){this._bindKinetophoneEvents(this.props.kinetophone)},componentWillUnmount:function(){this._unbindKinetophoneEvents(this.props.kinetophone)},componentWillReceiveProps:function(e){e.kinetophone!==this.props.kinetophone&&(this._unbindKinetophoneEvents(this.props.kinetophone),this._unbindKinetophoneEvents(e.kinetophone))},_bindKinetophoneEvents:function(e){this.onKinetophonePlay&&e.on("play",this.onKinetophonePlay),this.onKinetophonePause&&e.on("pause",this.onKinetophonePause),this.onKinetophoneTimeUpdate&&e.on("timeupdate",this.onKinetophoneTimeUpdate),this.onKinetophoneSeeking&&e.on("seeking",this.onKinetophoneSeeking),this.onKinetophoneSeek&&e.on("seek",this.onKinetophoneSeek),this.onKinetophoneEnd&&e.on("end",this.onKinetophoneEnd)},_unbindKinetophoneEvents:function(e){this.onKinetophonePlay&&e.off("play",this.onKinetophonePlay),this.onKinetophonePause&&e.off("pause",this.onKinetophonePause),this.onKinetophoneTimeUpdate&&e.off("timeupdate",this.onKinetophoneTimeUpdate),this.onKinetophoneSeeking&&e.off("seeking",this.onKinetophoneSeeking),this.onKinetophoneSeek&&e.off("seek",this.onKinetophoneSeek),this.onKinetophoneEnd&&e.off("end",this.onKinetophoneEnd)}}},function(e){e.exports={componentDidMount:function(){this._bindKinetophoneChannelEvents(this.props.kinetophone,this.props.channel)},componentWillUnmount:function(){this._unbindKinetophoneChannelEvents(this.props.kinetophone,this.props.channel)},componentWillReceiveProps:function(e){(e.kinetophone!==this.props.kinetophone||e.channel!==this.props.channel)&&(this._unbindKinetophoneChannelEvents(this.props.kinetophone,this.props.channel),this._unbindKinetophoneChannelEvents(e.kinetophone,e.channel))},_bindKinetophoneChannelEvents:function(e,t){this.onKinetophoneTimingEnter&&e.on("enter:"+t,this.onKinetophoneTimingEnter),this.onKinetophoneTimingExit&&e.on("exit:"+t,this.onKinetophoneTimingExit)},_unbindKinetophoneChannelEvents:function(e,t){this.onKinetophoneTimingEnter&&e.off("enter:"+t,this.onKinetophoneTimingEnter),this.onKinetophoneTimingExit&&e.off("exit:"+t,this.onKinetophoneTimingExit)}}},function(e){e.exports=function(e,t){return"function"==typeof e?e(t):t.data[e]}},function(e,t,n){var i=n(1);e.exports=i.createClass({displayName:"ReactKinetophoneAudioClip",componentDidMount:function(){this.audio=new Audio,this.audio.src=this.props.src;var e=this.props.start,t=this.props.currentTime-e;this.audio.currentTime=t/1e3,this.props.playing&&this.audio.play()},componentWillUnmount:function(){this.audio.pause(),this.audio=null},componentWillReceiveProps:function(e){if(this.props.playing!==e.playing&&this.audio[e.playing?"play":"pause"](),this.props.lastSeek!==e.lastSeek){var t=e.start,n=e.currentTime-t;this.audio.currentTime=n/1e3}},render:function(){return null}})},function(e,t,n){var i=n(1),o=n(2);e.exports=i.createClass({displayName:"ReactKinetophonePlayPauseButton",mixins:[o],getInitialState:function(){return{playing:this.props.kinetophone.playing()}},render:function(){var e=this.state.playing?"Pause":"Play",t=i.__spread({onClick:this.togglePlaying},this.props);return i.DOM.button(t,e)},togglePlaying:function(e){e.preventDefault(),this.state.playing?this.pause():this.play()},onKinetophonePlay:function(){this.setState({playing:!0})},onKinetophonePause:function(){this.setState({playing:!1})},onKinetophoneTimeUpdate:function(e){this.setState({currentTime:e})},play:function(){this.props.kinetophone.play()},pause:function(){this.props.kinetophone.pause()},updateTime:function(e){var t=~~e.target.value;this.props.kinetophone.currentTime(t)}})},function(e,t,n){var i=n(1),o=n(2);e.exports=i.createClass({displayName:"ReactKinetophoneControlBar",mixins:[o],getInitialState:function(){return{currentTime:this.props.kinetophone.currentTime(),totalDuration:this.props.kinetophone.totalDuration()}},render:function(){return i.DOM.input(i.__spread({type:"range",min:0,max:this.state.totalDuration,value:this.state.currentTime,onChange:this.updateTime},this.props))},onKinetophoneTimeUpdate:function(e){this.setState({currentTime:e})},updateTime:function(e){var t=~~e.target.value;this.props.kinetophone.currentTime(t)}})},function(e,t,n){var i=n(1),o=i.createElement.bind(i),s=n(5),p=n(3),r=n(2),a=n(4);e.exports=i.createClass({displayName:"ReactKinetophoneImageOutput",mixins:[p,r],propTypes:{kinetophone:i.PropTypes.object.isRequired,channel:i.PropTypes.string.isRequired,getSrc:i.PropTypes.oneOfType([i.PropTypes.string,i.PropTypes.func]),getKey:i.PropTypes.oneOfType([i.PropTypes.string,i.PropTypes.func])},getDefaultProps:function(){return{getSrc:"src",getKey:"src"}},getInitialState:function(){return{playing:this.props.kinetophone.playing(),currentAudios:{},lastSeekToggle:!1,currentTime:this.props.kinetophone.currentTime()}},render:function(){return i.DOM.div({},Object.keys(this.state.currentAudios).map(function(e){var t=this.state.currentAudios[e];return o(s,{key:a(this.props.getKey,t),start:t.start,src:a(this.props.getSrc,t),playing:this.state.playing,lastSeek:this.state.lastSeekToggle,currentTime:this.state.currentTime})}.bind(this)))},onKinetophoneTimingEnter:function(e){var t=a(this.props.getKey,e);this.state.currentAudios[t]=e,this.setState({currentAudios:this.state.currentAudios})},onKinetophoneTimingExit:function(e){var t=a(this.props.getKey,e);delete this.state.currentAudios[t],this.setState({currentAudios:this.state.currentAudios})},onKinetophonePlay:function(){this.setState({playing:!0})},onKinetophonePause:function(){this.setState({playing:!1})},onKinetophoneSeek:function(){this.setState({lastSeekToggle:!this.state.lastSeekToggle})},onKinetophoneTimeUpdate:function(e){this.setState({currentTime:e})}})},function(e,t,n){var i=n(1),o=i.createElement.bind(i),s=n(6),p=n(7);e.exports=i.createClass({displayName:"ReactKinetophoneControlBar",render:function(){return i.DOM.span(this.props,o(s,{kinetophone:this.props.kinetophone}),o(p,{kinetophone:this.props.kinetophone}))}})},function(e,t,n){var i=n(1),o=n(3),s=n(4);e.exports=i.createClass({displayName:"ReactKinetophoneImageOutput",mixins:[o],propTypes:{channel:i.PropTypes.string.isRequired},getDefaultProps:function(){return{getSrc:"src"}},getInitialState:function(){return{currentSrc:null}},render:function(){return i.DOM.img(i.__spread({src:this.state.currentSrc},this.props))},onKinetophoneTimingEnter:function(e){this.setState({currentSrc:s(this.props.getSrc,e)})}})},function(e,t,n){var i=n(1),o=i.createElement.bind(i),s=n(3),p=n(4);e.exports=i.createClass({displayName:"ReactKinetophoneImageOutput",mixins:[s],propTypes:{channel:i.PropTypes.string.isRequired},getDefaultProps:function(){return{getText:"text",wrapper:"p"}},getInitialState:function(){return{currentText:""}},render:function(){return o(this.props.wrapper,{},this.state.currentText)},onKinetophoneTimingEnter:function(e){this.setState({currentText:p(this.props.getText,e)})}})},function(e,t,n){var i=n(1),o=n(2);e.exports=i.createClass({displayName:"ReactKinetophoneTimeDisplay",mixins:[o],getInitialState:function(){return{currentTime:this.props.kinetophone.currentTime()}},render:function(){return i.DOM.span(this.props,this.getTimeDisplay())},onKinetophoneTimeUpdate:function(e){this.setState({currentTime:e})},getTimeDisplay:function(){for(var e=this.state.currentTime/1e3,t=Math.floor(e/60),n=""+Math.floor(e%60);n.length<2;)n="0"+n;return t+":"+n}})}])});